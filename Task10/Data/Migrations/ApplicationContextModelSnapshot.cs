// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task10.Data;

#nullable disable

namespace Task10.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task10.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Learn the basics of Python programming language, including variables, data types, control structures, functions, and basic algorithms.",
                            Name = "Python Programming Fundamentals"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Discover effective digital marketing strategies, including search engine optimization (SEO), social media marketing, email marketing, and content marketing.",
                            Name = "Digital Marketing Strategies"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Get started with web development by learning HTML, CSS, and JavaScript fundamentals.",
                            Name = "Web Development Basics"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Learn the fundamentals of graphic design, including typography, color theory, layout design, and image manipulation techniques.",
                            Name = "Graphic Design Essentials"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Get started with mobile app development by learning about mobile platforms, user interface design, and mobile app development tools.",
                            Name = "Mobile App Development Basics"
                        });
                });

            modelBuilder.Entity("Task10.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "PPF-01"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Name = "PPF-02"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            Name = "PPF-03"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            Name = "DMC-01"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            Name = "DMC-02"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            Name = "WDB-01"
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "WDB-02"
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 4,
                            Name = "GDE-01"
                        });
                });

            modelBuilder.Entity("Task10.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            GroupId = 1,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Alice",
                            GroupId = 1,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Michael",
                            GroupId = 1,
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Emily",
                            GroupId = 2,
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Daniel",
                            GroupId = 3,
                            LastName = "Wilson"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Jessica",
                            GroupId = 3,
                            LastName = "Martinez"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Matthew",
                            GroupId = 4,
                            LastName = "Taylor"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Sophia",
                            GroupId = 5,
                            LastName = "Anderson"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "William",
                            GroupId = 6,
                            LastName = "Thomas"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Olivia",
                            GroupId = 7,
                            LastName = "Hernandez"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Ethan",
                            GroupId = 8,
                            LastName = "Moore"
                        });
                });

            modelBuilder.Entity("Task10.Models.Group", b =>
                {
                    b.HasOne("Task10.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Task10.Models.Student", b =>
                {
                    b.HasOne("Task10.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
